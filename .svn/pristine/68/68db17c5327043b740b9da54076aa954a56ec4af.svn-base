package gov.gwssi.fileUpload;

import gov.gwssi.fileDeleted.FileDeletedI;
import gov.gwssi.fileDeleted.FileDeletedImpl;
import gov.gwssi.util.OpenOfficePDFConverter;
import gov.gwssi.util.PDFConverter;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import javax.jws.WebService;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

import com.thoughtworks.xstream.core.util.Base64Encoder;

@WebService
public class FileUploadImpl implements FileUploadI {
	@Override
	public String uploadFile(String fileContext,String filePath,String fileName,String extend){
	   String result = "0";
	   try {
		   Base64Encoder base64 = new Base64Encoder();
		   byte[] byt = base64.decode(fileContext);
		  	File file = new File(filePath+"\\\\"+fileName);
		  	if(!file.getParentFile().exists()){  
	            file.getParentFile().mkdirs();  
	        }
		  	if(!file.exists()){
		  		file.createNewFile();  
		  	}
		  	FileOutputStream fos = new FileOutputStream(file);
		  	fos.write(byt);
		  	fos.close();
		  	if(!"pdf".equals(extend)){
		  		this.cover2Pdf(extend, filePath, fileName);
		  	}
		  	result = filePath;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	/**
	 * 生成Excel
	 */
	@SuppressWarnings("deprecation")
	@Override
	public void writeExcel(String filePath, String ysmc_fileName){
		try {
			File file = new File(filePath);
		  	if(!file.getParentFile().exists()){  
	            file.getParentFile().mkdirs();  
	        }
		  	if(!file.exists()){
		  		file.createNewFile();  
		  	}
			//第一步，创建一个workbook对应一个excel文件
	        HSSFWorkbook workbook = new HSSFWorkbook();
	        //第二部，在workbook中创建一个sheet对应excel中的sheet
	        HSSFSheet sheet = workbook.createSheet("shell1");
	        //第三部，在sheet表中添加表头第0行，老版本的poi对sheet的行列有限制
	        HSSFRow row = sheet.createRow(0);
	        //第四步，创建单元格，设置表头
	        HSSFCell cell = row.createCell(0);
	        cell.setCellValue("元素名");
	        cell = row.createCell(1);
	        cell.setCellValue("文件名");

	        //第五步，写入实体数据，实际应用中这些数据从数据库得到,对象封装数据，集合包对象。对象的属性值对应表的每行的值
	        String[] ysmc_fileNames = ysmc_fileName.split(";");
	        for (int i = 0; i < ysmc_fileNames.length; i++) {
	            HSSFRow row1 = sheet.createRow(i + 1);
	            String ysmc = ysmc_fileNames[i].split(":")[0];
	            String fileName = ysmc_fileNames[i].split(":")[1];
	            //创建单元格设值
	            row1.createCell(0).setCellValue(ysmc);
	            row1.createCell(1).setCellValue(fileName);
	        }

	        //将文件保存到指定的位置
	        try {
	            FileOutputStream fos = new FileOutputStream(filePath);
	            workbook.write(fos);
	            System.out.println("写入成功");
	            fos.close();
	        } catch (IOException e) {
	            e.printStackTrace();
	        }
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	/**
	 * 将文件转为PDF格式
	 * @param extend
	 * @param filePath
	 * @param fileName
	 * @return
	 */
	public void cover2Pdf(String extend,String filePath,String fileName){
		PDFConverter pdfConverter = new OpenOfficePDFConverter();
		pdfConverter.convert2PDF(filePath+"\\\\"+fileName,extend);
		FileDeletedI fileDeleted = new FileDeletedImpl();
		fileDeleted.deletedFile(filePath+"\\\\"+fileName);
	}
}
